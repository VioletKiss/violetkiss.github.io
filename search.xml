<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何写一个用户账户密码生成管理的 Java 程序</title>
      <link href="/2020/06/12/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E7%AE%A1%E7%90%86%E7%9A%84%20Java%20%E7%A8%8B%E5%BA%8F/"/>
      <url>/2020/06/12/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E7%AE%A1%E7%90%86%E7%9A%84%20Java%20%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>写一个放在 U 盘里的密码生成记录管理工具</p><a id="more"></a><h2 id="项目目的"><a href="#项目目的" class="headerlink" title="项目目的"></a>项目目的</h2><p>借助自己写的这个小项目可以更理解 Java ，从而自省自己，发现自己的不足才能进步。</p><h2 id="项目功能"><a href="#项目功能" class="headerlink" title="项目功能"></a>项目功能</h2><ol><li>根据用户输入的信息生成16位密码，并且记录下用户输入的信息</li><li>用户列表页可查看用户录入的账号信息并进行关键字查找</li><li>列表页可以查看、复制、删除以及修改密码修改信息。</li><li>用户进入程序需要输入密码，第一次进入为空，可在修改密码页重设密码。</li><li>用户可生成由数字，大小写字母，特殊字符随机搭配的4-99位的密码。</li><li>用户可通过修改密码长度或修改seed参数来控制密码不同。</li><li>程序运行完会自动打包 jar 包，把数据文件记录在jar包内。</li></ol><h2 id="完成概况"><a href="#完成概况" class="headerlink" title="完成概况"></a>完成概况</h2><h3 id="进入程序前需输入密码"><a href="#进入程序前需输入密码" class="headerlink" title="进入程序前需输入密码"></a>进入程序前需输入密码</h3><p><img src="https://img-blog.csdnimg.cn/20191024101116701.png" alt="输入密码进入程序"></p><h3 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h3><p><img src="https://img-blog.csdnimg.cn/20191024101211608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="首页"></p><h3 id="用户录入页面"><a href="#用户录入页面" class="headerlink" title="用户录入页面"></a>用户录入页面</h3><p><img src="https://img-blog.csdnimg.cn/20191024101245297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="用户信息录入界面"></p><h3 id="生成密码页"><a href="#生成密码页" class="headerlink" title="生成密码页"></a>生成密码页</h3><p><img src="https://img-blog.csdnimg.cn/20191024102058436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="生成密码"></p><h3 id="列表页"><a href="#列表页" class="headerlink" title="列表页"></a>列表页</h3><p><img src="https://img-blog.csdnimg.cn/20191024102229820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="用户列表页"></p><h3 id="列表页右键删除数据"><a href="#列表页右键删除数据" class="headerlink" title="列表页右键删除数据"></a>列表页右键删除数据</h3><ol><li>点击删除弹出页面<br><img src="https://img-blog.csdnimg.cn/20191024102529190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="是否确认删除"></li><li>选择确定弹出的页面<br><img src="https://img-blog.csdnimg.cn/20191024102620343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="输入密码确认删除"></li></ol><h3 id="列表页右键数据属性"><a href="#列表页右键数据属性" class="headerlink" title="列表页右键数据属性"></a>列表页右键数据属性</h3><p><img src="https://img-blog.csdnimg.cn/20191024102310473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="右键属性"><br>3. 输入正确密码删除成功页面<br><img src="https://img-blog.csdnimg.cn/20191024102718255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="删除成功"><br>4. 点击确定重新刷新页面</p><h3 id="右键编辑页"><a href="#右键编辑页" class="headerlink" title="右键编辑页"></a>右键编辑页</h3><p><img src="https://img-blog.csdnimg.cn/20191024102347288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="右键编辑页"></p><h3 id="右键用户详细信息页"><a href="#右键用户详细信息页" class="headerlink" title="右键用户详细信息页"></a>右键用户详细信息页</h3><p><img src="https://img-blog.csdnimg.cn/20191024102432242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="右键详细信息"></p><h3 id="修改进入程序密码"><a href="#修改进入程序密码" class="headerlink" title="修改进入程序密码"></a>修改进入程序密码</h3><p><img src="https://img-blog.csdnimg.cn/20191024102823322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="密码进入"></p><h3 id="修改程序进入密码"><a href="#修改程序进入密码" class="headerlink" title="修改程序进入密码"></a>修改程序进入密码</h3><p><img src="https://img-blog.csdnimg.cn/20191024102904228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3ExMTE5ODIzMzA5,size_16,color_FFFFFF,t_70" alt="修改密码"></p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p>项目放在码云上，想看源码的移步：<a href="https://gitee.com/VioletKiss/user-info-manage" target="_blank" rel="noopener">项目码云地址</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Swing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 根据日期 group by 统计数据并将时间不存在的记录补全（纯 sql ，不建表）</title>
      <link href="/2020/06/12/MySQL%20%E6%A0%B9%E6%8D%AE%E6%97%A5%E6%9C%9F%20group%20by%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%B0%86%E6%97%B6%E9%97%B4%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E8%AE%B0%E5%BD%95%E8%A1%A5%E5%85%A8%EF%BC%88%E7%BA%AF%20sql%20%EF%BC%8C%E4%B8%8D%E5%BB%BA%E8%A1%A8%EF%BC%89/"/>
      <url>/2020/06/12/MySQL%20%E6%A0%B9%E6%8D%AE%E6%97%A5%E6%9C%9F%20group%20by%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%B0%86%E6%97%B6%E9%97%B4%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E8%AE%B0%E5%BD%95%E8%A1%A5%E5%85%A8%EF%BC%88%E7%BA%AF%20sql%20%EF%BC%8C%E4%B8%8D%E5%BB%BA%E8%A1%A8%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>当需要统计连续时间的结果集的时候，比如说注册时间有一天没有用户注册，那么数据中便缺少了那一天的统计数据，这一天的数据可以通过代码解决，也可以使用建时间表的方法解决，当然也可以使用我下面的这个方法解决。</p><a id="more"></a><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>最近同事需要一个根据时间聚合统计数据的查询结果集，并且最好是可以把没有记录的日期也可以补全，我搜索了一下只找到说建立一个日期表然后联表查询方法，但是多一张没用的表，太不优雅了，所以我打算自己试试写一条sql尝试将结果查询出来。</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>由于需要连续的日期，我们想到可以通过MySQL的DATE_ADD或DATE_SUB来获得。那么函数中的type固定用DAY，但是expr我们怎么生成呢？这时候我们就可以设置一个变量不断递增来获取我们需要天数的日期，这样连续的日期就完成了，然后我们联合根据时间 group by 查询出来的结果集查询即可。</p><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>有一张 user 表，有 user_id 和 create_time 两个字段，模拟查询每天注册人数，暂定查询今天起往前20天（示例简单为主，具体需求可各自扩展）</p><ol><li>根据时间聚合查出结果集</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">DATE( u.create_time ) AS create_time,</span><br><span class="line">count( u.user_id ) AS total</span><br><span class="line">FROM</span><br><span class="line">&#96;user&#96; u </span><br><span class="line">GROUP BY</span><br><span class="line">DATE( u.create_time )</span><br></pre></td></tr></table></figure><ol start="2"><li><p>连续时间查询的结果集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SET @i :&#x3D;- 1;</span><br><span class="line">SELECT</span><br><span class="line">date_format( DATE_SUB( NOW( ), INTERVAL ( @i :&#x3D; @i + 1 ) DAY ), &#39;%Y-%m-%d&#39; ) AS &#96;time&#96; </span><br><span class="line">FROM</span><br><span class="line">(SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) xc1, </span><br><span class="line">(SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) xc2</span><br><span class="line">WHERE</span><br><span class="line">@i &lt;&#x3D; 30</span><br></pre></td></tr></table></figure><p>sql 解释：(SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) 这里表示 6 次，FROM 两遍根据笛卡尔积生成 6 X 6 次，所以最大会连续到36，注意设置的 @i 查询的天数要小于等于 36 ，如果要查询40，则根据数量在后面其中一条后 UNION 7，则为 6 X 7 = 42 次，即可，其他数量自行修改。</p></li><li><p>联合 1 和 2 两个结果集的数据 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">SET @i :&#x3D;- 1;</span><br><span class="line">SELECT</span><br><span class="line">x.&#96;time&#96;,</span><br><span class="line">-- IFNULL( d.create_time, x.&#96;time&#96; ) AS &#96;create_time&#96;,</span><br><span class="line">IFNULL( d.total, 0 ) AS total</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">date_format( DATE_SUB( NOW( ), INTERVAL ( @i :&#x3D; @i + 1 ) DAY ), &#39;%Y-%m-%d&#39; ) AS &#96;time&#96; </span><br><span class="line">FROM</span><br><span class="line">(SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) xc1, </span><br><span class="line">(SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) xc2</span><br><span class="line">WHERE</span><br><span class="line">@i &lt;&#x3D; 30 </span><br><span class="line">) x</span><br><span class="line">LEFT JOIN </span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">DATE( u.create_time ) AS create_time,</span><br><span class="line">count( u.user_id ) AS total</span><br><span class="line">FROM</span><br><span class="line">&#96;user&#96; u </span><br><span class="line">GROUP BY</span><br><span class="line">DATE( u.create_time ) </span><br><span class="line">) d ON TO_DAYS( x.&#96;time&#96; ) &#x3D; TO_DAYS( DATE( d.create_time ) ) </span><br><span class="line">ORDER BY</span><br><span class="line">x.&#96;time&#96;</span><br></pre></td></tr></table></figure></li></ol><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>在最终语句中：</p><ol><li>NOW() 可以替换成你想要的任意时间；</li><li>DATE_SUB 表示从 NOW() 时间起往前多少天的连续日期，如果需要往后的连续日期，改为 DATE_ADD 即可。</li><li>在获得连续日期的语句中，WHERE 条件中的 <code>@i &lt;= 20</code> 表示连续 20 天的日期，数值可自定义，选择自己想要查询的连续时间范围。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>确定好自己想要的结果形式，然后慢慢补全，直至获得最终的结果，利用分治法的思想，把一个大问题分解成几个小问题，一步一步解决，最终得出大问题的解。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis 使用注解的方式执行存储过程并获取返回值</title>
      <link href="/2020/06/12/MyBatis%20%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E7%9A%84%E6%96%B9%E5%BC%8F%E6%89%A7%E8%A1%8C%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%B9%B6%E8%8E%B7%E5%8F%96%E8%BF%94%E5%9B%9E%E5%80%BC/"/>
      <url>/2020/06/12/MyBatis%20%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E7%9A%84%E6%96%B9%E5%BC%8F%E6%89%A7%E8%A1%8C%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%B9%B6%E8%8E%B7%E5%8F%96%E8%BF%94%E5%9B%9E%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<p>阿里规范不建议使用存储过程，当不得不使用存储过程时可以参考该教程</p><a id="more"></a><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>通过搜索引擎搜索了获取返回值的 MyBatis 注解配置方式，但是都搜索不到，都是 xml 配置方式，尝试自己写出来了。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol><li><p>首先要有一个存储过程，in，out值。</p></li><li><p>配置 mapper：<br>部分代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">   &#x2F;&#x2F;mybatis 注解 调用存储过程</span><br><span class="line">@Select(&#123;</span><br><span class="line">&quot;call execute_seckill(&quot;,</span><br><span class="line">&quot;#&#123;map.seckillId,mode&#x3D;IN,jdbcType&#x3D;BIGINT&#125;,&quot;,</span><br><span class="line">&quot;#&#123;map.userPhone,mode&#x3D;IN,jdbcType&#x3D;BIGINT&#125;,&quot;,</span><br><span class="line">&quot;#&#123;map.killTime,mode&#x3D;IN,jdbcType&#x3D;TIMESTAMP&#125;,&quot;,</span><br><span class="line">&quot;#&#123;map.result,mode&#x3D;OUT,jdbcType&#x3D;INTEGER&#125;);&quot;</span><br><span class="line">&#125;)</span><br><span class="line">@Results(&#123;</span><br><span class="line">@Result(column&#x3D;&quot;result&quot;, property&#x3D;&quot;result&quot;, jdbcType&#x3D; JdbcType.INTEGER)</span><br><span class="line">&#125;)</span><br><span class="line">@Options(statementType &#x3D; StatementType.CALLABLE)</span><br><span class="line">void killByProcedure(@Param(&quot;map&quot;) Map map);</span><br></pre></td></tr></table></figure><p><code>StatementType.CALLABLE</code> 表示 存储过程</p><ol start="3"><li>配置 service<br>部分代码：</li></ol></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">      Map&lt;String, Object&gt; map &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">map.put(&quot;seckillId&quot;, seckillId);</span><br><span class="line">map.put(&quot;userPhone&quot;, userPhone);</span><br><span class="line">map.put(&quot;killTime&quot;, killTime);</span><br><span class="line">map.put(&quot;result&quot;, null);</span><br><span class="line">try &#123;</span><br><span class="line">seckillCustomMapper.killByProcedure(map);</span><br><span class="line">&#x2F;&#x2F; 获取result</span><br><span class="line">System.out.println(map.get(&quot;result&quot;));</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">logger.error(e.getMessage(), e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过<code>map</code>相对应的可以获取到<code>result</code>值。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>多动手去尝试不同的实现方式，才能提升自己的动手、思考的能力。</p>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
            <tag> 存储过程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
